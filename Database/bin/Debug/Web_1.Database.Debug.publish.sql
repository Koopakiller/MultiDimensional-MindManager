/*
Deployment script for Web.Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Web.Database"
:setvar DefaultFilePrefix "Web.Database"
:setvar DefaultDataPath "C:\Users\tomla\AppData\Local\Microsoft\VisualStudio\SSDT"
:setvar DefaultLogPath "C:\Users\tomla\AppData\Local\Microsoft\VisualStudio\SSDT"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 7e709500-aaf4-4602-ac75-8c90705fd71c is skipped, element [dbo].[Humans].[Birthdate] (SqlSimpleColumn) will not be renamed to BirthDateTime';


GO
PRINT N'Rename refactoring operation with key 38f7e30a-0a5f-4f88-80a6-57a9ebd525ee is skipped, element [dbo].[Humans].[Birthplace] (SqlSimpleColumn) will not be renamed to BirthPlace';


GO
PRINT N'Creating [dbo].[HumanRelationKinds]...';


GO
CREATE TABLE [dbo].[HumanRelationKinds] (
    [Id]   INT            NOT NULL,
    [Name] NVARCHAR (128) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[HumanRelations]...';


GO
CREATE TABLE [dbo].[HumanRelations] (
    [Id]              INT NOT NULL,
    [RelationKind]    INT NOT NULL,
    [PersonId]        INT NOT NULL,
    [RelatedPersonId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Humans]...';


GO
CREATE TABLE [dbo].[Humans] (
    [Id]            INT            NOT NULL,
    [BirthPlace]    NVARCHAR (128) NULL,
    [BirthDateTime] DATETIME       NULL,
    [PersonId]      INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FK_HumanRelations_HumanRelationKinds]...';


GO
ALTER TABLE [dbo].[HumanRelations] WITH NOCHECK
    ADD CONSTRAINT [FK_HumanRelations_HumanRelationKinds] FOREIGN KEY ([RelationKind]) REFERENCES [dbo].[HumanRelationKinds] ([Id]);


GO
PRINT N'Creating [dbo].[FK_HumanRelations_Persons]...';


GO
ALTER TABLE [dbo].[HumanRelations] WITH NOCHECK
    ADD CONSTRAINT [FK_HumanRelations_Persons] FOREIGN KEY ([PersonId]) REFERENCES [dbo].[Persons] ([Id]);


GO
PRINT N'Creating [dbo].[FK_HumanRelations_Persons_Related]...';


GO
ALTER TABLE [dbo].[HumanRelations] WITH NOCHECK
    ADD CONSTRAINT [FK_HumanRelations_Persons_Related] FOREIGN KEY ([RelatedPersonId]) REFERENCES [dbo].[Persons] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Humans_Persons]...';


GO
ALTER TABLE [dbo].[Humans] WITH NOCHECK
    ADD CONSTRAINT [FK_Humans_Persons] FOREIGN KEY ([PersonId]) REFERENCES [dbo].[Persons] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7e709500-aaf4-4602-ac75-8c90705fd71c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7e709500-aaf4-4602-ac75-8c90705fd71c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '38f7e30a-0a5f-4f88-80a6-57a9ebd525ee')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('38f7e30a-0a5f-4f88-80a6-57a9ebd525ee')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

INSERT INTO HumanRelationKinds ([Name]) VALUES ('Mother')
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[HumanRelations] WITH CHECK CHECK CONSTRAINT [FK_HumanRelations_HumanRelationKinds];

ALTER TABLE [dbo].[HumanRelations] WITH CHECK CHECK CONSTRAINT [FK_HumanRelations_Persons];

ALTER TABLE [dbo].[HumanRelations] WITH CHECK CHECK CONSTRAINT [FK_HumanRelations_Persons_Related];

ALTER TABLE [dbo].[Humans] WITH CHECK CHECK CONSTRAINT [FK_Humans_Persons];


GO
PRINT N'Update complete.';


GO
